---
bibliography: robust_ai.bib
---

# Robust AI

::: {.content-visible when-format="html"}
Resources: [Slides](#sec-robust-ai-resource), [Labs](#sec-robust-ai-resource), [Exercises](#sec-robust-ai-resource)
:::

![_DALLÂ·E 3 Prompt: Create an image featuring an advanced AI system symbolized by an intricate, glowing neural network, deeply nested within a series of progressively larger and more fortified shields. Each shield layer represents a layer of defense, showcasing the system's robustness against external threats and internal errors. The neural network, at the heart of this fortress of shields, radiates with connections that signify the AI's capacity for learning and adaptation. This visual metaphor emphasizes not only the technological sophistication of the AI but also its resilience and security, set against the backdrop of a state-of-the-art, secure server room filled with the latest in technological advancements. The image aims to convey the concept of ultimate protection and resilience in the field of artificial intelligence._](./images/png/cover_robust_ai.png)

::: {.callout-tip}

## Learning Objectives

* coming soon.

:::

## Introduction

Robust AI focuses on ensuring that AI systems operate reliably and safely in real-world environments. As AI systems are deployed in critical applications, from healthcare to autonomous vehicles, it's essential that they can handle unexpected situations, adversarial attacks, and hardware or software faults. This chapter delves into the various challenges and solutions associated with building robust AI systems, especially for TinyML.


## Hardware Resilience

Explanation: With the proliferation of TinyML on edge devices, the hardware on which these models run can be exposed to various environmental factors and wear-and-tear. Ensuring hardware resilience is crucial to maintain consistent AI performance.

### Compute Faults

Description: Discusses issues related to faults in the computation units, such as CPUs, GPUs, and custom accelerators. This can include issues like overheating, transistor failures, or other malfunctions.

### Memory Faults

Description: Addresses faults in the memory components of a system, including RAM, cache, and storage. Topics can include bit flips, wear-out, and other memory-related issues.

## Software Resilience

Explanation: Software forms the backbone of any AI system. Ensuring its resilience means that the system can handle unexpected inputs, software bugs, or other issues without catastrophic failure.

### Framework Faults

Description: Discusses potential issues in the software stack, from the OS to the AI framework. This can include bugs, version incompatibilities, or other software-related problems.

### Faulty Inputs

Description: Explores how AI systems can handle unexpected or corrupted inputs. This is especially important for systems in the real world where input data can be noisy or unreliable.

## Model Resilience

As the core of any AI system, the model's resilience to various challenges, from adversarial attacks to real-world data shifts, is paramount for reliable operation.

### Worst-case Faults

Description: Investigates the model's behavior under worst-case scenarios, such as extreme data values or conditions outside the training distribution.

### Adversarial Attacks 

Description: Discusses potential threats where malicious actors intentionally manipulate inputs to deceive the AI model, and strategies to defend against these attacks.

## Conclusion

Explanation: Conclude with the key highlights.

## Resources {#sec-robust-ai-resource .unnumbered}

Here is a curated list of resources to support both students and instructors in their learning and teaching journey. We are continuously working on expanding this collection and will be adding new exercises in the near future.

:::{.callout-slide collapse="true"}
# Slides

These slides serve as a valuable tool for instructors to deliver lectures and for students to review the material at their own pace. We encourage both students and instructors to leverage these slides to enhance their understanding and facilitate effective knowledge transfer.



:::{.callout-exercise collapse="true"}
# Exercises

To reinforce the concepts covered in this chapter, we have curated a set of exercises that challenge students to apply their knowledge and deepen their understanding. 

Coming soon.
:::

:::{.callout-lab collapse="true"}
# Labs

In addition to exercises, we also offer a series of hands-on labs that allow students to gain practical experience with embedded AI technologies. These labs provide step-by-step guidance, enabling students to develop their skills in a structured and supportive environment. We are excited to announce that new labs will be available soon, further enriching the learning experience.

Coming soon.
:::
