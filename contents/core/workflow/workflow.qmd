---
bibliography: workflow.bib
---

# AI Workflow {#sec-ai_workflow}

::: {.content-visible when-format="html"}
Resources: [Slides](#sec-ai-workflow-resource), [Videos](#sec-ai-workflow-resource), [Exercises](#sec-ai-workflow-resource)
:::

![_DALLÂ·E 3 Prompt: Create a rectangular illustration of a stylized flowchart representing the AI workflow/pipeline. From left to right, depict the stages as follows: 'Data Collection' with a database icon, 'Data Preprocessing' with a filter icon, 'Model Design' with a brain icon, 'Training' with a weight icon, 'Evaluation' with a checkmark, and 'Deployment' with a rocket. Connect each stage with arrows to guide the viewer horizontally through the AI processes, emphasizing these steps' sequential and interconnected nature._](images/png/cover_ai_workflow.png)

## Purpose {.unnumbered}

_What are the diverse elements of AI systems and how do we combine to create effective machine learning system solutions?_

The creation of practical AI solutions requires the orchestration of multiple system components into coherent workflows. Architectural patterns serve as building blocks, while workflow design highlights the connections and interactions that animate these components. This systematic perspective reveals how data flow, model training, and deployment considerations are intertwined to form robust AI systems. Analyzing these interconnections offers crucial insights into system-level design choices, establishing a framework for understanding how theoretical concepts can be translated into deployable solutions that meet real-world needs.

::: {.callout-tip}

## Learning Objectives

* Understand the ML workflow and gain insights into the structured approach and stages of developing, deploying, and maintaining machine learning models.

* Learn about the unique challenges and distinctions between workflows for Traditional machine learning and embedded AI.

* Appreciate the roles in ML projects and understand their responsibilities and significance.

* Understanding the importance, applications, and considerations for implementing ML models in resource-constrained environments.

* Gain awareness about the ethical and legal aspects that must be considered and adhered to in ML and embedded AI projects.

* Establish a basic understanding of ML workflows and roles to be well-prepared for deeper exploration in the following chapters.

:::

## Overview

The ML workflow is a structured approach encompassing the entire machine learning system lifecycle, from initial development through deployment and maintenance. While individual algorithmic components are important, the success of ML systems heavily depends on the surrounding infrastructure, tooling, and practices---aspects that are often overlooked but create significant technical debt when neglected.

Building effective ML systems requires orchestrating both the model development pipeline and the broader system architecture that supports it. From a model development perspective, teams face challenges in selecting appropriate algorithms, tuning hyperparameters, managing training data quality, and ensuring model convergence. These fundamental ML challenges are amplified when moving from experimental environments to production systems, where models must maintain performance while meeting strict operational requirements.

The system-level challenges of ML workflows present equally complex demands on infrastructure and architecture. Teams must design scalable data pipelines, efficient model serving infrastructure, comprehensive monitoring systems, and robust resource management frameworks. Each component must work in concert while adhering to constraints around computational efficiency, memory usage, power consumption, and latency requirements. Success requires careful attention to both the technical aspects of model deployment and the operational considerations of running ML systems at scale.

In this chapter, we explore the machine learning workflow from a systems perspective, examining how different components interact and the infrastructure needed to support them at a high level. We begin by introducing the ML lifecycle and its key stages. As @fig-lifecycle-overview illustrates, it typically involves the following key steps:

![ML lifecycle overview.](images/png/ML_life_cycle_overview.png){#fig-lifecycle-overview}

1. **Problem Definition:** Start by clearly articulating the specific problem you want to solve. This focuses on your efforts during data collection and model building.
2. **Data Collection and Preparation:** Gather relevant, high-quality training data that captures all aspects of the problem. Clean and preprocess the data to prepare it for modeling.
3. **Model Development and Training:** Choose a machine learning algorithm suited to your problem type and data. Consider the pros and cons of different approaches. Feed the prepared data into the model to train it. Training time varies based on data size and model complexity.
4. **Model Evaluation and Validation:** Test the trained model on new unseen data to measure its predictive accuracy. Identify any limitations.
5. **Model Deployment and Integration:** Integrate the validated model into applications or systems to start operationalization.
6. **Monitoring and Maintenance:** Track model performance in production. Retrain periodically on new data to keep it current.

We will continue this discussion with an examination of how these stages are manifested in various deployment scenarios. We will also discuss the roles and responsibilities in ML systems development, and conclude with practical considerations for implementation. While we are providing a high-level overview here, subsequent chapters will delve into core concepts such as data engineering, ML frameworks, training infrastructure, and deployment optimizations.

This foundation is essential for understanding the complexities of building production ML systems. Whether deploying models in cloud environments, edge devices, or embedded systems, the principles and practices covered here will help guide the development of robust, maintainable, and effective ML solutions. By considering both the algorithmic and systems aspects of ML workflows from the start, teams can better navigate the challenges of bringing machine learning from concept to production.

* **Version Control:** Track code and data changes to reproduce results and revert to earlier versions if needed.
* **Documentation:** Maintain detailed documentation for workflow understanding and reproduction.
* **Testing:** Rigorously test the workflow to ensure its functionality.
* **Security:** Safeguard your workflow and data when deploying models in production settings.

## Traditional vs. Embedded AI

The ML workflow is a universal guide applicable across various platforms, including cloud-based solutions, edge computing, and TinyML. However, the workflow for Embedded AI introduces unique complexities and challenges, making it a captivating domain and paving the way for remarkable innovations. @fig-dl-and-ml illustrates the differences between Machine Learning and Deep Learning.

![Comparing traditional Machine Learning and Deep Learning. Source: [BBN Times](https://www.bbntimes.com/technology/to-leverage-deep-learning-you-must-know-this-first)](images/png/comparingdlandml.png){#fig-dl-and-ml}

@fig-embedded-ai showcases the uses of embedded ai in various industries.

![Embedded AI applications. Source: [Rinf.tech](https://www.rinf.tech/what-is-embedded-intelligence-and-how-can-tech-leaders-embrace-it/)](images/png/embeddedai.png){#fig-embedded-ai}

### Resource Optimization

* **Traditional ML Workflow:** This workflow prioritizes model accuracy and performance, often leveraging abundant computational resources in cloud or data center environments.
* **Embedded AI Workflow:** Given embedded systems' resource constraints, this workflow requires careful planning to optimize model size and computational demands. Techniques like model quantization and pruning are crucial.

### Real-time Processing

* **Traditional ML Workflow:** Less emphasis on real-time processing, often relying on batch data processing.
* **Embedded AI Workflow:** Prioritizes real-time data processing, making low latency and quick execution essential, especially in applications like autonomous vehicles and industrial automation.

### Data Management and Privacy

* **Traditional ML Workflow:** Processes data in centralized locations, often necessitating extensive data transfer and focusing on data security during transit and storage.
* **Embedded AI Workflow:** This workflow leverages edge computing to process data closer to its source, reducing data transmission and enhancing privacy through data localization.

### Hardware-Software Integration

* **Traditional ML Workflow:** Typically operates on general-purpose hardware, with software development occurring independently.
* **Embedded AI Workflow:** This workflow involves a more integrated approach to hardware and software development, often incorporating custom chips or hardware accelerators to achieve optimal performance.

## Roles & Responsibilities

Creating an ML solution, especially for embedded AI, is a multidisciplinary effort involving various specialists. Unlike traditional software development, building an ML solution demands a multidisciplinary approach due to the experimental nature of model development and the resource-intensive requirements of training and deploying these models.

There is a pronounced need for roles focusing on data for the success of machine learning pipelines. Data scientists and data engineers handle data collection, build data pipelines, and ensure data quality. Since the nature of machine learning models depends on the data they consume, the models are unique and vary with different applications, necessitating extensive experimentation. Machine learning researchers and engineers drive this experimental phase through continuous testing, validation, and iteration to achieve optimal performance.

The deployment phase often requires specialized hardware and infrastructure, as machine learning models can be resource-intensive, demanding high computational power and efficient resource management. This necessitates collaboration with hardware engineers to ensure that the infrastructure can support the computational demands of model training and inference.

As models make decisions that can impact individuals and society, ethical and legal aspects of machine learning are becoming increasingly important. Ethicists and legal advisors are needed to ensure compliance with ethical standards and legal regulations.

Understanding the various roles involved in an ML project is crucial for its successful completion. @tbl-mlops_roles provides a general overview of these typical roles, although it's important to note that the lines between them can sometimes blur. Let's examine this breakdown:

+----------------------------------------+----------------------------------------------------------------------------------------------------+
| Role                                   | Responsibilities                                                                                   |
+:=======================================+:===================================================================================================+
| Project Manager                        | Oversees the project, ensuring timelines and milestones are met.                                   |
+----------------------------------------+----------------------------------------------------------------------------------------------------+
| Domain Experts                         | Offer domain-specific insights to define project requirements.                                     |
+----------------------------------------+----------------------------------------------------------------------------------------------------+
| Data Scientists                        | Specialize in data analysis and model development.                                                 |
+----------------------------------------+----------------------------------------------------------------------------------------------------+
| Machine Learning Engineers             | Focus on model development and deployment.                                                         |
+----------------------------------------+----------------------------------------------------------------------------------------------------+
| Data Engineers                         | Manage data pipelines.                                                                             |
+----------------------------------------+----------------------------------------------------------------------------------------------------+
| Embedded Systems Engineers             | Integrate ML models into embedded systems.                                                         |
+----------------------------------------+----------------------------------------------------------------------------------------------------+
| Software Developers                    | Develop software components for AI system integration.                                             |
+----------------------------------------+----------------------------------------------------------------------------------------------------+
| Hardware Engineers                     | Design and optimize hardware for the embedded AI system.                                           |
+----------------------------------------+----------------------------------------------------------------------------------------------------+
| UI/UX Designers                        | Focus on user-centric design.                                                                      |
+----------------------------------------+----------------------------------------------------------------------------------------------------+
| QA Engineers                           | Ensure the system meets quality standards.                                                         |
+----------------------------------------+----------------------------------------------------------------------------------------------------+
| Ethicists and Legal Advisors           | Consult on ethical and legal compliance.                                                           |
+----------------------------------------+----------------------------------------------------------------------------------------------------+
| Operations and Maintenance Personnel   | Monitor and maintain the deployed system.                                                          |
+----------------------------------------+----------------------------------------------------------------------------------------------------+
| Security Specialists                   | Ensure system security.                                                                            |
+----------------------------------------+----------------------------------------------------------------------------------------------------+

: Roles and responsibilities of people involved in MLOps. {#tbl-mlops_roles .striped .hover}

This holistic view facilitates seamless collaboration and nurtures an environment ripe for innovation and breakthroughs. As we proceed through the upcoming chapters, we will explore each role's essence and expertise and foster a deeper understanding of the complexities involved in AI projects. For a more detailed discussion of the specific tools and techniques these roles use, as well as an in-depth exploration of their responsibilities, refer to @sec-roles-and_resp-ops. 

## Conclusion

This chapter has laid the foundation for understanding the machine learning workflow, a structured approach crucial for the development, deployment, and maintenance of ML models. We explored the unique challenges faced in ML workflows, where resource optimization, real-time processing, data management, and hardware-software integration are paramount. These distinctions underscore the importance of tailoring workflows to meet the specific demands of the application environment.

Moreover, we emphasized the significance of multidisciplinary collaboration in ML projects. By examining the diverse roles involved, from data scientists to software engineers, we gained an overview of the teamwork necessary to navigate the experimental and resource-intensive nature of ML development. This understanding is crucial for fostering effective communication and collaboration across different domains of expertise.

As we move forward to more detailed discussions in subsequent chapters, this high-level overview equips us with a holistic perspective on the ML workflow and the various roles involved. This foundation will prove important as we dive into specific aspects of machine learning, which will allow us to contextualize advanced concepts within the broader framework of ML development and deployment.

## Resources {#sec-ai-workflow-resource}

Here is a curated list of resources to support students and instructors in their learning and teaching journeys. We are continuously working on expanding this collection and will add new exercises soon.

:::{.callout-note collapse="false"}

#### Slides

These slides are a valuable tool for instructors to deliver lectures and for students to review the material at their own pace. We encourage students and instructors to leverage these slides to improve their understanding and facilitate effective knowledge transfer.

* [ML Workflow.](https://docs.google.com/presentation/d/1rWXLegepZjpJHonYLKcOJYfOIunmOBnrg0SGhy1pZ_I/edit)

* [ML Lifecycle.](https://docs.google.com/presentation/d/1zOxDX-tKlY8t9KmCYek0E-mZA9ENPjW9ymVyFV17DmE/edit)

:::

:::{.callout-important collapse="false"}

#### Videos

* _Coming soon._
:::

:::{.callout-caution collapse="false"}

#### Exercises

To reinforce the concepts covered in this chapter, we have curated a set of exercises that challenge students to apply their knowledge and deepen their understanding.

* _Coming soon._
:::
