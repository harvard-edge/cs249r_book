name: 'üéÆ Workflow Controller'

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Inkscape
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y inkscape
          inkscape --version

      - name: Install font dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y \
            fonts-freefont-ttf \
            fonts-liberation \
            fontconfig
          sudo fc-cache -f -v

      - name: Create test SVG
        if: runner.os == 'Linux'
        run: |
          echo '<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100"><circle cx="50" cy="50" r="40" fill="red"/></svg>' > test.svg
          cat test.svg

      - name: Test SVG to PNG conversion
        if: runner.os == 'Linux'
        run: |
          inkscape test.svg --export-type=png --export-filename=test.png
          ls -la test.png
          file test.png

      - name: Test SVG to PDF conversion
        if: runner.os == 'Linux'
        continue-on-error: true
        run: |
          echo "Attempting SVG to PDF conversion..."
          inkscape test.svg --export-type=pdf --export-filename=test.pdf
          if [ -f test.pdf ]; then
            echo "‚úÖ SVG to PDF conversion succeeded"
            ls -la test.pdf
            file test.pdf
          else
            echo "‚ùå SVG to PDF conversion failed"
          fi

      - name: Test rsvg-convert as alternative
        if: runner.os == 'Linux'
        run: |
          echo "Installing rsvg-convert..."
          sudo apt-get install -y librsvg2-bin

          echo "Converting SVG to PDF with rsvg-convert..."
          rsvg-convert -f pdf -o rsvg-test.pdf test.svg

          if [ -f rsvg-test.pdf ]; then
            echo "‚úÖ rsvg-convert SVG to PDF conversion succeeded"
            ls -la rsvg-test.pdf
            file rsvg-test.pdf
          else
            echo "‚ùå rsvg-convert SVG to PDF conversion failed"
          fi
          
  # Quality Check Jobs (Run on PRs and Pushes)
  structure-check:
    needs: checkout
    uses: ./.github/workflows/structure-check.yml

  link-check:
    needs: checkout
    uses: ./.github/workflows/link-check.yml

  lint-markdown:
    needs: checkout
    uses: ./.github/workflows/lint-markdown.yml

  # Metadata Update Jobs (Run Only After Merge to dev)
  update-changelog:
    needs: checkout
#    needs: [structure-check, link-check, lint-markdown]
    uses: ./.github/workflows/update-changelog.yml

  update-contributors:
    needs: checkout
#    needs: [structure-check, link-check, lint-markdown]
    uses: ./.github/workflows/update-contributors.yml

  # Build Jobs
  build-dev:
    name: üîß Development Build
    if: github.ref == 'refs/heads/dev'
    needs: checkout
#    needs: [update-changelog, update-contributors]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    uses: ./.github/workflows/quarto-build.yml
    with:
      environment: development
      os: ${{ matrix.os }}
      target: dev
    secrets:
      SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}

  # Lightweight HTML-only build for dev branch
  build-dev-light:
    name: üí® Fast HTML Dev Build
    if: github.ref == 'refs/heads/dev'
    needs: checkout
    uses: ./.github/workflows/quarto-build-lite.yml
    with:
      environment: development
      os: ubuntu-latest
      target: dev
    secrets:
      SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}

  test-svg-conversion:
    name: üñºÔ∏è Test SVG Conversion
    needs: checkout
    uses: ./.github/workflows/inkscape.yml
    with:
      environment: development
      os: ubuntu-latest
      target: dev
    secrets:
      SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}

  build-main:
    name: üöÄ Production Build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [update-changelog, update-contributors]
    uses: ./.github/workflows/quarto-build.yml
    with:
      environment: production
      os: ubuntu-latest
      target: main
    secrets:
      SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}

  # Status Reporting
  report-status:
    needs: [
      structure-check, 
      link-check, 
      lint-markdown, 
      update-changelog,
      update-contributors,
      build-main,
      build-dev,
      build-dev-light
    ]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: üìä Create Status Report
        run: |
          {
            echo "# üìä Workflow Status Report"
            echo
            echo "## üîç Quality Checks"
            echo "- Structure Check: ${{ needs.structure-check.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }}"
            echo "- Link Check: ${{ needs.link-check.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }}"
            echo "- Markdown Lint: ${{ needs.lint-markdown.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }}"
            echo
            echo "## üìù Metadata Updates"
            echo "- Changelog: ${{ needs.update-changelog.result == 'success' && '‚úÖ Updated' || '‚ùå Failed' }}"
            echo "- Contributors: ${{ needs.update-contributors.result == 'success' && '‚úÖ Updated' || '‚ùå Failed' }}"
            echo
            if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
              echo "## üöÄ Production Build"
              echo "- Main Build: ${{ needs.build-main.result == 'success' && '‚úÖ Success' || '‚ùå Failed' }}"
            fi
            if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
              echo "## üîß Development Build"
              echo "- Dev Build: ${{ needs.build-dev.result == 'success' && '‚úÖ Success' || '‚ùå Failed' }}"
              echo "- Light HTML Build: ${{ needs.build-dev-light.result == 'success' && '‚úÖ Success' || '‚ùå Failed' }}"
            fi
            echo
            echo "---"
            echo "‚è∞ Completed at: $(date '+%Y-%m-%d %H:%M:%S')"
          } >> $GITHUB_STEP_SUMMARY

      - name: üîç Check Overall Status
        if: always()
        run: |
          FAILED=0
          
          # Check quality checks
          [[ "${{ needs.structure-check.result }}" != "success" ]] && FAILED=1
          [[ "${{ needs.link-check.result }}" != "success" ]] && FAILED=1
          [[ "${{ needs.lint-markdown.result }}" != "success" ]] && FAILED=1
          
          # Check metadata updates
          [[ "${{ needs.update-changelog.result }}" != "success" ]] && FAILED=1
          [[ "${{ needs.update-contributors.result }}" != "success" ]] && FAILED=1
          
          # Check builds based on branch
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            [[ "${{ needs.build-main.result }}" != "success" ]] && FAILED=1
          fi
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            [[ "${{ needs.build-dev.result }}" != "success" ]] && FAILED=1
            [[ "${{ needs.build-dev-light.result }}" != "success" ]] && FAILED=1
          fi
          
          if [[ $FAILED -eq 1 ]]; then
            echo "::error::‚ùå One or more workflow steps failed"
            exit 1
          else
            echo "‚úÖ All checks passed successfully"
          fi