name: 'Workflow Controller'

on:
  workflow_dispatch:  # Allow manual trigger
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

env:
  IS_MAIN: ${{ github.ref == 'refs/heads/main' }}
  BUILD_WORKFLOW: ${{ github.ref == 'refs/heads/main' && 'main-build.yml' || 'dev-build.yml' }}
  DEPLOY_ENV: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

jobs:
  # Initialize job to set up outputs for later jobs
  initialize:
    runs-on: ubuntu-latest
    outputs:
      matrix_os: '["ubuntu-latest", "windows-latest"]'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

  # Run quality checks (structure, links, linting)
  quality-checks:
    needs: initialize
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: ${{ fromJson(needs.initialize.outputs.matrix_os) }}
    steps:
      - name: Run Structure Check
        uses: ./.github/workflows/structure-check.yml
        with:
          os: ${{ matrix.os }}
      
      - name: Run Link Check
        uses: ./.github/workflows/link-check.yml
        with:
          os: ${{ matrix.os }}
      
      - name: Run Quarto Check
        uses: ./.github/workflows/quarto-check.yml
        with:
          os: ${{ matrix.os }}

      - name: Run Markdown Lint
        uses: ./.github/workflows/lint-markdown.yml

  # Update metadata (e.g., changelog, contributors)
  update-metadata:
    needs: quality-checks
    runs-on: ubuntu-latest
    steps:
      - name: Update Changelog
        uses: ./.github/workflows/update-changelog.yml
        with:
          environment: ${{ env.DEPLOY_ENV }}

      - name: Update Contributors
        uses: ./.github/workflows/update-contributors.yml

  # Branch-specific builds
  build:
    needs: update-metadata
    uses: ./.github/workflows/${{ env.BUILD_WORKFLOW }}
    with:
      environment: ${{ env.DEPLOY_ENV }}

  # Deployment (only on main branch)
  deploy:
    if: env.IS_MAIN == 'true'
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy to Production
        uses: ./.github/workflows/deploy.yml

  # Status reporting
  report-status:
    needs: [quality-checks, update-metadata, build, deploy]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Create Status Report
        run: |
          echo "## 📊 Workflow Status Report" >> $GITHUB_STEP_SUMMARY
          
          echo "### 🔍 Quality Checks" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.quality-checks.result }}" = "success" ]; then
            echo "✅ Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "### 📝 Metadata Updates" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.update-metadata.result }}" = "success" ]; then
            echo "✅ Completed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "### 🔨 Build Process" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.build.result }}" = "success" ]; then
            echo "✅ Built Successfully" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Build Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ env.IS_MAIN }}" = "true" ]; then
            echo "### 🚀 Deployment" >> $GITHUB_STEP_SUMMARY
            if [ "${{ needs.deploy.result }}" = "success" ]; then
              echo "✅ Deployed Successfully" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ Deployment Failed" >> $GITHUB_STEP_SUMMARY
            fi
          fi
          
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "🕒 Completed at: $(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_STEP_SUMMARY

      - name: Check Overall Status
        if: always()
        run: |
          if [ "${{ needs.quality-checks.result }}" != "success" ] || \
             [ "${{ needs.update-metadata.result }}" != "success" ] || \
             [ "${{ needs.build.result }}" != "success" ] || \
             ([ "${{ env.IS_MAIN }}" = "true" ] && [ "${{ needs.deploy.result }}" != "success" ]); then
            echo "::error::One or more workflow steps failed"
            exit 1
          fi
