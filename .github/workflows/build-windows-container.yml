name: 'üê≥ Build Windows Container'

# This workflow builds the Windows Quarto build container
# Windows containers are more complex but provide performance benefits

# Prevent multiple builds running simultaneously
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force rebuild even if no changes'
        required: false
        default: false
        type: boolean
      no_cache:
        description: 'Disable Docker build cache (fresh build)'
        required: false
        default: false
        type: boolean
      container_registry:
        description: 'Container registry URL'
        required: false
        default: 'ghcr.io'
        type: string
      container_name:
        description: 'Container image name'
        required: false
        default: 'quarto-windows'
        type: string
      container_tag:
        description: 'Container tag'
        required: false
        default: 'latest'
        type: string
  workflow_call:
    inputs:
      force_rebuild:
        required: false
        default: false
        type: boolean
      no_cache:
        required: false
        default: false
        type: boolean
      container_registry:
        required: false
        default: 'ghcr.io'
        type: string
      container_name:
        required: false
        default: 'quarto-windows'
        type: string
      container_tag:
        required: false
        default: 'latest'
        type: string
  # DISABLED: Automatic triggers while working on containers
  # schedule:
  #   - cron: '0 2 * * 0'  # Weekly rebuild (Sunday at 2am - after Linux container)
  # push:
  #   paths:
  #     - 'tools/dependencies/**'
  #     - 'docker/build-quarto-windows/**'
  #     - '.github/workflows/build-windows-container.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: harvard-edge/cs249r_book/quarto-windows
  CONTAINER_TAG: latest
  DOCKERFILE_PATH: ./docker/build-quarto-windows/Dockerfile
  CONTEXT_PATH: .

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 120  # 2 hour timeout for Windows builds
    permissions:
      contents: read
      packages: write

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üè∑Ô∏è Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.CONTAINER_TAG }}

      - name: üê≥ Build and push Windows container
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.CONTEXT_PATH }}
          file: ${{ env.DOCKERFILE_PATH }}
          load: true  # Keep local copy for testing
          push: true  # Also push to registry
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          no-cache: ${{ inputs.no_cache }}
          platforms: windows/amd64
          provenance: false
          sbom: false

      - name: Build Complete
        run: |
          echo "‚úÖ Windows container build completed successfully!"
          echo "üìä Container: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.CONTAINER_TAG }}"
