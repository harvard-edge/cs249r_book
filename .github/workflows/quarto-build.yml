name: '📚 Quarto Build'

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: 'Build environment (development/production)'
      os:
        required: true
        type: string
        description: 'Operating system to run on (ubuntu-latest/windows-latest)'
      quarto-version:
        required: false
        type: string
        default: '1.7.13'
        description: 'Version of Quarto to use'
      r-version:
        required: false
        type: string
        default: '4.3.2'
        description: 'Version of R to use'
      target:
        required: true
        type: string
        description: 'Target branch (dev/main)'
    secrets:
      SSH_DEPLOY_KEY:
        required: true

permissions:
  contents: write
  pages: write

jobs:
  build:
    runs-on: ${{ inputs.os }}
    environment:
      name: ${{ inputs.environment }}

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.target }}
          fetch-depth: 0

      - name: 📦 Setup Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: ${{ inputs.quarto-version }}

      - name: 📝 Install TinyTeX
        uses: r-lib/actions/setup-tinytex@v2
        with:
          cache: true

      - name: 💾 Cache TeX Live packages
        uses: actions/cache@v3
        id: cache-texlive
        with:
          path: |
            ~/.TinyTeX
            ~/AppData/Roaming/TinyTeX
          key: ${{ runner.os }}-texlive-${{ hashFiles('**/*.tex') }}
          restore-keys: |
            ${{ runner.os }}-texlive-

      - name: 📦 Install Additional TeX Live packages
        if: steps.cache-texlive.outputs.cache-hit != 'true'
        run: |
          tlmgr install \
            scheme-basic collection-basic collection-latex \
            collection-latexrecommended collection-latexextra \
            collection-fontsrecommended collection-pictures \
            collection-xetex collection-luatex collection-bibtexextra \
            collection-langenglish koma-script standalone \
            pgf tikz-cd pgfplots preview marginfix newpx luatex85

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: pip

      - name: 📦 Install Python PDF tools
        run: |
          pip install pikepdf ghostscript PyPDF2

      - name: 📦 Install Ghostscript (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get install -y ghostscript

      - name: 📦 Install Ghostscript (Windows)
        if: runner.os == 'Windows'
        run: choco install ghostscript -y

      - name: 📊 Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ inputs.r-version }}
          use-public-rspm: true

      - name: 📦 Install R Dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache: true
          packages: |
            quarto

      - name: 🎨 Install Inkscape
        if: runner.os == 'Linux'
        run: |
          sudo add-apt-repository ppa:inkscape.dev/stable -y
          sudo apt-get update
          sudo apt-get install inkscape -y

      - name: 🎨 Install Inkscape
        if: runner.os == 'Windows'
        run: choco install inkscape -y

      - name: 🔨 Render Quarto Project
        uses: quarto-dev/quarto-actions/render@v2

      - name: 📤 Upload artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: _book-${{ inputs.os }}
          path: _book

      - name: 📄 Check and Compress PDF
        run: |
          python ./.github/scripts/quarto_publish/gs_compress_pdf.py \
            -i "./_book/Machine-Learning-Systems.pdf" \
            -o "./_book/ebook.pdf" -s "/ebook"

      - name: 🚀 Deploy
        if: inputs.target == 'main' && runner.os == 'Linux'
        uses: quarto-dev/quarto-actions/publish@v2
        with:
          target: gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🚀 Stage to Dev Site
        if: inputs.target == 'dev' && runner.os == 'Linux'
        uses: cpina/github-action-push-to-another-repository@v1.7.2
        with:
          target-branch: 'main'
          source-directory: '_book'
          destination-github-username: '${{ github.repository_owner }}'
          destination-repository-name: '<destination-repo>'
          target-directory: 'docs'
          user-email: 'action@github.com'
          commit-message: '📚 Push dev branch build'
          ssh-deploy-key: ${{ secrets.SSH_DEPLOY_KEY }}
