name: 'Quarto Build'

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: 'Build environment (development/production)'
      os:
        required: true
        type: string
        description: 'Operating system (ubuntu-latest/windows-latest)'
      quarto-version:
        required: false
        type: string
        default: '1.7.13'
      r-version:
        required: false
        type: string
        default: '4.3.2'
      target:
        required: true
        type: string
        description: 'Target branch (dev/main)'
    secrets:
      SSH_DEPLOY_KEY:
        required: true

permissions:
  contents: write
  pages: write

jobs:
  build:
    runs-on: ${{ inputs.os }}
    environment: ${{ inputs.environment }}
    
    steps:
      - name: Validate Branch
        shell: bash
        run: |
          if [[ "${{ inputs.target }}" != "dev" && "${{ inputs.target }}" != "main" ]]; then
            echo "❌ Target must be 'dev' or 'main'"
            exit 1
          fi
          if [[ "${{ inputs.target }}" == "main" && "${{ github.ref }}" != "refs/heads/main" ]]; then
            echo "❌ Main build requires main branch"
            exit 1
          fi
          if [[ "${{ inputs.target }}" == "dev" && "${{ github.ref }}" != "refs/heads/dev" ]]; then
            echo "❌ Dev build requires dev branch"
            exit 1
          fi
          echo "✅ Branch validation passed"

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.target }}
          fetch-depth: 0

      # Quarto Setup
      - name: Cache Quarto
        id: cache-quarto
        uses: actions/cache@v3
        with:
          path: |
            ~/.local/share/quarto
            ~/AppData/Local/quarto
          key: quarto-${{ runner.os }}-${{ inputs.quarto-version }}

      - name: Setup Quarto
        if: steps.cache-quarto.outputs.cache-hit != 'true'
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: ${{ inputs.quarto-version }}

      # R Setup
      - name: Cache R Packages
        id: cache-r
        uses: actions/cache@v3
        with:
          path: ${{ runner.os == 'Windows' && 'C:/Users/runneradmin/Documents/R/win-library' || '~/R/library' }}
          key: r-${{ runner.os }}-${{ inputs.r-version }}-${{ hashFiles('**/install_packages.R') }}

      - name: Setup R
        if: steps.cache-r.outputs.cache-hit != 'true'
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ inputs.r-version }}
          use-public-rspm: true

      - name: Install R Dependencies
        if: steps.cache-r.outputs.cache-hit != 'true'
        shell: Rscript {0}
        run: |
          install.packages("remotes")
          source("install_packages.R")

      # TeX Setup
      - name: Cache TeX
        id: cache-tex
        uses: actions/cache@v3
        with:
          path: |
            ~/.texlive
            ~/.TinyTeX
            ~/AppData/Roaming/TinyTeX
          key: tex-${{ runner.os }}-${{ hashFiles('**/*.qmd', '**/*.tex') }}

      - name: Setup TinyTeX
        if: steps.cache-tex.outputs.cache-hit != 'true'
        uses: r-lib/actions/setup-tinytex@v2

      - name: Install TeX Packages
        if: steps.cache-tex.outputs.cache-hit != 'true'
        run: |
          tlmgr install \
            babel-english \
            collection-latex \
            collection-fontsrecommended \
            collection-latexrecommended \
            pgf \
            pgfplots \
            standalone \
            xcolor

      # System Dependencies
      - name: Install Linux Dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            libfontconfig1-dev \
            libharfbuzz-dev \
            libfribidi-dev \
            libfreetype6-dev \
            libtiff5-dev \
            libjpeg-dev \
            inkscape

      - name: Install Windows Dependencies
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          choco install inkscape -y

      # Build Cache
      - name: Cache Build
        uses: actions/cache@v3
        with:
          path: |
            _book
            **/_cache
            **/.quarto
            **/.jupyter_cache
          key: build-${{ runner.os }}-${{ hashFiles('**/*.qmd', '**/*.ipynb', '**/*.md', '_quarto.yml') }}

      # Build Book
      - name: Render Quarto Project
        uses: quarto-dev/quarto-actions/render@v2

      # PDF Processing (Main only)
      - name: Setup PDF Tools
        if: inputs.target == 'main' && runner.os == 'Linux'
        run: |
          sudo apt-get install -y ghostscript
          python3 -m pip install -r scripts/requirements.txt

      - name: Process PDF
        if: inputs.target == 'main' && runner.os == 'Linux'
        run: |
          if [ -f "_book/Machine-Learning-Systems.pdf" ]; then
            python3 ./scripts/quarto_publish/gs_compress_pdf.py \
              -i _book/Machine-Learning-Systems.pdf \
              -o _book/ebook.pdf \
              -s "/ebook"
            mv _book/ebook.pdf _book/Machine-Learning-Systems.pdf
          else
            echo "⚠️ PDF not found - skipping compression"
          fi

      # Deployment
      - name: Deploy to Dev Site
        if: inputs.target == 'dev' && runner.os == 'Linux'
        uses: cpina/github-action-push-to-another-repository@v1.7.2
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
        with:
          source-directory: '_book'
          destination-github-username: 'harvard-edge'
          destination-repository-name: 'cs249r_book_dev'
          user-email: khoshnevis.naeem@gmail.com
          target-branch: main
          target-directory: docs

      - name: Deploy to GitHub Pages
        if: inputs.target == 'main' && runner.os == 'Linux'
        uses: quarto-dev/quarto-actions/publish@v2
        with:
          target: gh-pages
          render: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Artifacts
      - name: Upload Build Artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: book-${{ inputs.os }}
          path: _book
          compression-level: 9
          retention-days: 5

      - name: Upload Debug Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-${{ inputs.target }}-${{ inputs.os }}
          path: |
            _book/**
            .quarto/**
            **/_cache/**
            **/logs/**
            **/*.log
          compression-level: 9
          retention-days: 2

      - name: Build Summary
        run: |
          echo "## Build Status" >> $GITHUB_STEP_SUMMARY
          echo "- Target: ${{ inputs.target }}" >> $GITHUB_STEP_SUMMARY
          echo "- OS: ${{ inputs.os }}" >> $GITHUB_STEP_SUMMARY
          echo "- Environment: ${{ inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- Quarto: ${{ inputs.quarto-version }}" >> $GITHUB_STEP_SUMMARY
          echo "- R: ${{ inputs.r-version }}" >> $GITHUB_STEP_SUMMARY