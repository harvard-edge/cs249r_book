name: 'üéÆ Controller'

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
    
jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for changelog

  # Quality Check Jobs (Run on all events)
  structure-check:
    needs: checkout
    uses: ./.github/workflows/structure-check.yml

  link-check:
    needs: checkout
    uses: ./.github/workflows/link-check.yml

  lint-markdown:
    needs: checkout
    uses: ./.github/workflows/lint-markdown.yml

  # Metadata Update Jobs (Run Only After Merge to branches, not on PRs)
  update-changelog:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    needs: [structure-check, link-check, lint-markdown]
    uses: ./.github/workflows/update-changelog.yml

  update-contributors:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    needs: [structure-check, link-check, lint-markdown]
    uses: ./.github/workflows/update-contributors.yml
          
  # Build Jobs (Only run on pushes to branches, not on PRs)
  build-dev:
    name: üîß Development Build
    if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/dev'
    needs: [update-changelog, update-contributors]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        format: [html, pdf]
    uses: ./.github/workflows/quarto-build.yml
    with:
      environment: development
      os: ${{ matrix.os }}
      format: ${{ matrix.format }}
      deploy: ${{ matrix.os == 'ubuntu-latest' }}
      target: dev
    secrets:
      SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}

  build-main:
    name: üöÄ Production Build
    if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
    needs: [update-changelog, update-contributors]
    strategy:
      matrix:
        format: [html, pdf]
    uses: ./.github/workflows/quarto-build.yml
    with:
      environment: production
      os: ubuntu-latest
      format: ${{ matrix.format }}
      deploy: true
      target: main
    secrets:
      SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}

  report-status:
    needs: [
      structure-check, 
      link-check, 
      lint-markdown,
      update-changelog,
      update-contributors,
      build-dev,
      build-main
    ]
    runs-on: ubuntu-latest
    steps:
      - name: üìä Create Status Report
        shell: bash
        run: |
          {
            echo "# üìä Workflow Status Report"
            echo
            echo "## üîç Quality Checks"
            echo "- Structure Check: ${{ needs.structure-check.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }}"
            echo "- Link Check: ${{ needs.link-check.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }}"
            echo "- Markdown Lint: ${{ needs.lint-markdown.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }}"
            echo
            
            # Check for metadata update jobs (may not run on PRs)
            if [[ "${{ contains(needs.*.result, 'update-changelog.result') }}" == "true" ]]; then
              echo "## üìù Metadata Updates"
              echo "- Changelog: ${{ needs.update-changelog.result == 'success' && '‚úÖ Updated' || needs.update-changelog.result == 'skipped' && '‚è≠Ô∏è Skipped' || '‚ùå Failed' }}"
              echo "- Contributors: ${{ needs.update-contributors.result == 'success' && '‚úÖ Updated' || needs.update-contributors.result == 'skipped' && '‚è≠Ô∏è Skipped' || '‚ùå Failed' }}"
              echo
            fi
            
            # Check for PR validation (only runs on PRs)
            if [[ "${{ contains(needs.*.result, 'validate-build.result') }}" == "true" ]]; then
              echo "## üß™ PR Validation"
              echo "- Build Check: ${{ needs.validate-build.result == 'success' && '‚úÖ Passed' || needs.validate-build.result == 'skipped' && '‚è≠Ô∏è Skipped' || '‚ùå Failed' }}"
              echo
            fi
            
            # Check for dev builds
            if [[ "${{ contains(needs.*.result, 'build-dev.result') }}" == "true" ]]; then
              echo "## üîß Development Build"
              echo "- Full Dev Build: ${{ needs.build-dev.result == 'success' && '‚úÖ Success' || needs.build-dev.result == 'skipped' && '‚è≠Ô∏è Skipped' || '‚ùå Failed' }}"
              echo
            fi
            
            # Check for production builds
            if [[ "${{ contains(needs.*.result, 'build-main.result') }}" == "true" ]]; then
              echo "## üöÄ Production Build"
              echo "- Main Build: ${{ needs.build-main.result == 'success' && '‚úÖ Success' || needs.build-main.result == 'skipped' && '‚è≠Ô∏è Skipped' || '‚ùå Failed' }}"
              echo
            fi
            
            echo "---"
            echo "‚è∞ Completed at: $(date '+%Y-%m-%d %H:%M:%S')"
          } >> $GITHUB_STEP_SUMMARY
          
          # Check overall status
          FAILED=0
          [[ "${{ needs.structure-check.result }}" != "success" ]] && FAILED=1
          [[ "${{ needs.link-check.result }}" != "success" ]] && FAILED=1
          [[ "${{ needs.lint-markdown.result }}" != "success" ]] && FAILED=1
          
          if [[ "${{ contains(needs.*.result, 'update-changelog.result') }}" == "true" && "${{ needs.update-changelog.result }}" != "skipped" ]]; then
            [[ "${{ needs.update-changelog.result }}" != "success" ]] && FAILED=1
          fi
          
          if [[ "${{ contains(needs.*.result, 'update-contributors.result') }}" == "true" && "${{ needs.update-contributors.result }}" != "skipped" ]]; then
            [[ "${{ needs.update-contributors.result }}" != "success" ]] && FAILED=1
          fi
          
          if [[ "${{ contains(needs.*.result, 'validate-build.result') }}" == "true" && "${{ needs.validate-build.result }}" != "skipped" ]]; then
            [[ "${{ needs.validate-build.result }}" != "success" ]] && FAILED=1
          fi
          
          if [[ "${{ contains(needs.*.result, 'build-dev.result') }}" == "true" && "${{ needs.build-dev.result }}" != "skipped" ]]; then
            [[ "${{ needs.build-dev.result }}" != "success" ]] && FAILED=1
          fi
          
          if [[ "${{ contains(needs.*.result, 'build-main.result') }}" == "true" && "${{ needs.build-main.result }}" != "skipped" ]]; then
            [[ "${{ needs.build-main.result }}" != "success" ]] && FAILED=1
          fi
          
          if [[ $FAILED -eq 1 ]]; then
            echo "::error::‚ùå One or more workflow steps failed"
            exit 1
          else
            echo "‚úÖ All required checks passed successfully"
          fi