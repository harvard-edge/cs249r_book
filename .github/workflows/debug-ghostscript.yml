name: '🐛 Debug Ghostscript Download'

# Minimal workflow to debug ONLY Ghostscript download issues
# Strips away all other complexity to isolate the problem

on:
  workflow_dispatch:
    inputs:
      test_dockerfile:
        description: 'Dockerfile to test'
        required: false
        default: 'docker/build-quarto-windows/Dockerfile.minimal'
        type: string

env:
  DOCKERFILE_PATH: ${{ inputs.test_dockerfile || 'docker/build-quarto-windows/Dockerfile.minimal' }}

jobs:
  debug-ghostscript:
    name: 🐛 Debug Ghostscript Only
    runs-on: windows-latest
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🐛 Build minimal container (Ghostscript focus)
        run: |
          echo "🚀 Building minimal container to debug Ghostscript..."
          echo "📊 Using Dockerfile: ${{ env.DOCKERFILE_PATH }}"
          echo "📊 Build strategy: --no-cache (always fresh for debugging)"
          
          # Always use no-cache for debugging
          docker build --no-cache -f ${{ env.DOCKERFILE_PATH }} -t ghostscript-debug:latest .
          
          echo "✅ Build completed - check logs above for Ghostscript download details"

      - name: 🧪 Test container functionality
        run: |
          echo "🧪 Testing minimal container..."
          
          # Basic container test
          docker run --rm ghostscript-debug:latest pwsh -Command "Write-Host 'Container is running'"
          
          # Check if Ghostscript is available
          echo "📊 Checking for Ghostscript in container..."
          docker run --rm ghostscript-debug:latest pwsh -Command "
            if (Test-Path 'C:/Program Files/gs') {
              Write-Host '✅ Ghostscript directory found';
              Get-ChildItem 'C:/Program Files/gs' | ForEach-Object { Write-Host ('📁 ' + $_.Name) };
            } else {
              Write-Host '❌ Ghostscript directory not found';
            }
          "
          
          echo "🎯 Debug session complete - check build logs for download details"

      - name: 📋 Debug Summary
        run: |
          echo "🐛 GHOSTSCRIPT DEBUG SESSION COMPLETE"
          echo ""
          echo "📊 What was tested:"
          echo "  ✅ PowerShell 7 installation" 
          echo "  ✅ Multiple Ghostscript download methods"
          echo "  ✅ URL accessibility testing"
          echo "  ✅ File size validation"
          echo "  ✅ Installation process"
          echo "  ✅ Basic functionality test"
          echo ""
          echo "🔍 Check build logs above for:"
          echo "  - Which URLs are accessible"
          echo "  - Which download method works"
          echo "  - Exact error messages"
          echo "  - File sizes and paths"
          echo ""
          echo "💡 Next steps based on results:"
          echo "  - If download works: Add back other components"
          echo "  - If download fails: Try different URLs or methods"
          echo "  - If install fails: Debug installation parameters"
