# About This Book {.unnumbered}

## Overview

This book is a collaborative effort started by the CS249r Tiny Machine Learning class at Harvard University. We intend for this book to become a community-driven effort to help educators and learners get started with TinyML. This living document will be continually updated as we continue to learn more about TinyML and how to teach it.

## Topics Covered

The book covers a wide range of topics related to embedded machine learning, providing a comprehensive understanding of the field. The topics covered include:

* Overview and Introduction to Embedded Machine Learning
* Data Engineering
* Embedded Machine Learning Frameworks
* Efficient Model Representation and Compression
* Performance Metrics and Benchmarking of ML Systems
* Learning on the Edge
* Hardware Acceleration for Edge ML: GPUs, TPUs, and FPGAs
* Embedded MLOps
* Secure and Privacy-Preserving On-Device ML
* Responsible AI
* Sustainability at the Edge
* Generative AI at the Edge

By the end of this book, you will gain a brief introduction to machine learning and IoT. You will learn about real-world deployments of embedded machine learning systems. We hope you will also gain practical experience through hands-on project assignments.

## Intended Audience

This book is designed specifically for newcomers who wish to explore the fascinating and nascent world of tiny machine learning (tinyML). It provides the basic underpinnings of ML and embedded systems, and moves into more complex and broader topics relevant to both the tinyML and broader research community. More specifically, we believe the book will confer the following benefits to these groups of people:

* **Embedded Systems Engineers:** This book is a valuable resource for engineers working in the field of embedded systems. It provides a solid foundation in TinyML, allowing them to design and implement intelligent applications on microcontrollers and other embedded platforms with limited resources.

* **Computer Science and Electrical Engineering Students:** Students pursuing degrees in computer science and electrical engineering can benefit from this book. It offers an introduction to the concepts, algorithms, and techniques used in TinyML, preparing students to tackle real-world challenges in the emerging field of embedded machine learning.

* **Researchers and Academics:** Researchers and academics in the field of machine learning, computer vision, and signal processing will find this book useful. It offers insights into the unique challenges of deploying machine learning algorithms on low-power, low-memory devices, enabling them to develop new approaches and advance the field of TinyML.

* **Industry Professionals:** Professionals working in industries like IoT, robotics, wearable technology, and smart devices will find this book relevant. It equips them with the knowledge required to integrate machine learning capabilities into their products, enabling intelligent and autonomous behavior.

## Key Takeaways

Users of this book will learn how to train and deploy deep neural network models on resource-constrained microcontrollers and the broader challenges associated with their design, development, deployment, and use. 

* **Introduction to Machine Learning:** A fundamental understanding of machine learning concepts, including supervised, unsupervised, and reinforcement learning.

* **TinyML Fundamentals:** Exploring the challenges and constraints associated with deploying machine learning on small, low-power devices.

* **Hardware Platforms:** Coverage of popular microcontrollers and development boards specifically designed for TinyML applications, along with their architecture and specifications.

* **Training Models:** Techniques and tools for training machine learning models suitable for embedded systems, including considerations for model size, accuracy, and resource utilization.

* **Optimization Techniques:** Strategies for model compression, quantization, and algorithmic optimization to ensure efficient execution on resource-constrained devices.

* **Real-world Applications:** Practical use cases and examples demonstrating the deployment of TinyML in various domains, such as industrial automation, healthcare, and environmental monitoring.

* **Challenges and Future Trends:** Discussion on the current challenges in TinyML, potential solutions, and emerging trends in the field.

By encompassing these aspects, our aim is to make this book a go-to resource for anyone interested in developing intelligent applications on embedded systems.

After completing the chapters, readers will be empowered with the capabilities to design and implement their own ML-enabled projects, starting from defining a problem to gathering data and training the neural network model and finally deploying it to the device to display inference results or control other hardware appliances based on inference data.

## Prerequisites

* **Basic Programming Knowledge**: It is *recommended* that readers have some prior experience with programming, preferably in Python. Understanding variables, data types, control structures, and basic programming concepts will facilitate comprehension and engagement with the book.

* **Familiarity with Machine Learning Concepts**: While not *essential*, a basic understanding of machine learning concepts, such as supervised and unsupervised learning, will help readers grasp the material more easily. However, the book provides sufficient explanations to bring readers up to speed if they are new to the field.

* **Python Programming Skills (Optional)**: Readers with some Python programming experience will have an advantage when engaging with the coding portions of the book. Familiarity with libraries such as *NumPy*, *scikit-learn*, and *TensorFlow* will greatly facilitate the implementation and experimentation with machine learning models.

* **Learning Mindset**: The book has been structured to be accessible to a wide audience, including readers with varying levels of technical expertise. It provides a gradual learning curve, allowing readers to start with general knowledge about the field, progress to coding exercises, and potentially advance to deploying models on embedded devices. However, to fully benefit from the book, readers should be willing to *challenge themselves* and engage in practical exercises and projects.

* **Availability of Resources**: To fully explore the practical aspects of TinyML, readers should have access to the necessary resources. These include a computer with Python and relevant libraries installed, as well as *optional access to an embedded development board or microcontroller* for experimenting with deploying machine learning models.

By ensuring that these general requirements are met, readers will have the opportunity to broaden their understanding of TinyML, gain hands-on experience with coding exercises, and even venture into practical implementation on embedded devices, enabling them to *push the boundaries* of their knowledge and skills.
